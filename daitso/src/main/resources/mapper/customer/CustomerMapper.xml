<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daitso.customer.repository.ICustomerRepository">

	<!--  
		기능: 이메일 중복체크(중복되면 1, 중복되지 않으면 0 
		참고: 상태가 'N'인 상태인 컬럼은 중복체크에서 제외
		담당자: 최준원 
	-->
    <select id="checkEmailDuplicated" parameterType="String" resultType="int">
		SELECT count(*)
		  FROM customer
		 WHERE customer_email = #{customerEmail} 
		   AND status = 'Y'
		   AND login_method = 'inside'
    </select>
    
    <!-- 
    	기능: 휴대폰번호 중복체크(중복되면 1, 중복되지 않으면 0 
    	참고: 상태가 'N'인 상태인 컬럼은 중복체크에서 제외
    	담당자: 최준원
    -->
	<select id="checkTelnoDuplicated" parameterType="String" resultType="int">
		SELECT count(*)
		  FROM customer
		 WHERE customer_telno = #{customerTelno}
		   AND status = 'Y'
		   AND login_method = 'inside'
    </select>
    
   	<!-- 
   		기능: 회원가입(사용자로부터 입력받은 정보들 customer 테이블에 저장)
   		담당자: 최준원
   	-->
    <insert id="insertIntoCustomer" parameterType="com.example.daitso.customer.model.CustomerSignUp">
        INSERT INTO customer ( customer_id, 
        					   customer_email, 
        					   customer_pw, 
        					   customer_nm, 
        					   customer_telno, 
        					   customer_dv )
        	 VALUES ( customer_seq.nextval, 
        	 		  #{customerEmail}, 
        	 		  #{customerPw}, 
        	 		  #{customerNm}, 
        	 		  #{customerTelno}, 
        	 		  101 )
    </insert>
    
    <!-- 
   		기능: 회원가입(사용자로부터 입력받은 정보들 customer 테이블에 저장) -> 소셜 로그인 시
   		담당자: 최준원
   	-->
    <insert id="insertIntoCustomerWithSocial" parameterType="com.example.daitso.customer.model.CustomerSignUpWithSocial">
        INSERT INTO customer ( customer_id, 
        					   customer_email, 
        					   customer_pw, 
        					   customer_nm, 
        					   customer_telno, 
        					   customer_dv,
        					   login_method )
        	 VALUES ( customer_seq.nextval, 
        	 		  #{customerEmail}, 
        	 		  #{customerPw}, 
        	 		  #{customerNm}, 
        	 		  '010-0000-0000', 
        	 		  101,
        	 		  #{loginMethod} )
    </insert>
     
    <!-- 
    	기능: 로그인(사용자로부터 입력받은 이메일이 customer 테이블에 있는지 조회)
        담당자: 최준원	
    -->
    <select id="findByCustomerEmail" parameterType="String" resultType="com.example.daitso.customer.model.CustomerSecurity">
	    SELECT customer_id as customerId, 
	    	   customer_email as customerEmail, 
			   customer_pw as customerPw,
			   customer_nm as customerNm, 
			   customer_telno as customerTelno
		  FROM customer
		 WHERE customer_email = #{customerEmail}
		   AND status = 'Y'
		   AND login_method = 'inside'
    </select>
    
    <!-- 
    	기능: 사용자 고유번호로부터 사용자 이름 갖고오기 
    	담당자: 최준원
    -->
    <select id="getCustomerNmByCustomerId" parameterType="int" resultType="com.example.daitso.customer.model.CustomerName">
		SELECT customer_nm as customerNm
		  FROM customer
		 WHERE customer_id = #{customerId}
		   AND status = 'Y'
    </select>
    
    <!-- 
    	기능: 사용자 고유번호로부터 사용자 정보(이름,이메일,휴대폰번호) 갖고오기 
    	담당자: 최준원
    -->
    <select id="getCustomerInfoByCustomerId" parameterType="int" resultType="com.example.daitso.customer.model.CustomerInfo">
		SELECT customer_nm as "customerNm",
			   customer_email as "customerEmail",
		       customer_telno as "customerTelno",
		       (  SELECT shipping_id 
		       	    FROM shipping 
		       	   WHERE customer_id = #{customerId} 
		       	     AND shipping_dv = 301 
		       	     AND status = 'Y'  ) AS "shippingId",
		       	(  SELECT MAX(shipping_id) 
		       	    FROM shipping 
		       	   WHERE customer_id = #{customerId} 
		       	     AND shipping_dv != 301 
		       	     AND status = 'Y'  ) AS "recentShippingId"
		  FROM customer
		 WHERE customer_id = #{customerId}
    </select>
    
    <!-- 
    	기능: 새 비밀번호 설정
    	담당자: 최준원
    -->
    <update id="settingPassword">
    	UPDATE customer
    	   SET customer_pw = #{password},
    	   	   modifier = ( SELECT customer_id 
    	   	   				  FROM customer 
    	   	   				 WHERE customer_email = #{email}
    	   	   				   AND status = 'Y' 
    	   	   				   AND login_method = 'inside'),
    	   	   modify_dt = SYSTIMESTAMP
    	 WHERE customer_email = #{email}
    	   AND status = 'Y'
    	   AND login_method = 'inside'
    </update>
    
    <!-- 
    	기능: 사용자 휴대폰번호로부터 이메일 조회
    	담당자: 최준원
    -->
    <select id="getCustomerEmailByCustomerTelno" parameterType="String" resultType="String">
    	SELECT customer_email
		  FROM customer
		 WHERE customer_telno = REGEXP_REPLACE(#{customerTelno}, '(.{3})(.+)(.{4})', '\1-\2-\3')
		   AND status = 'Y'
		   AND login_method = 'inside'
    </select>
    
    <!-- 
    	기능: 이메일과 로그인 방식으로 사용자 고유번호 갖고오기
    	담당자: 최준원
    -->
    <select id="findCustomerIdByCustomerEmailAndLoginMethod" resultType="int">
    	SELECT customer_id 
    	  FROM customer
		 WHERE customer_email = #{customerEmail} 
		   AND login_method = #{loginMethod} 
		   AND status = 'Y'
    </select>
    
    <!-- 
    	기능: 소셜 로그인 아이디 중복확인
        담당자: 최준원	
    -->
    <select id="findByCustomerEmailWithSocial" resultType="com.example.daitso.customer.model.CustomerSecurity">
	    SELECT customer_id as customerId, 
	    	   customer_email as customerEmail, 
			   customer_pw as customerPw,
			   customer_nm as customerNm, 
			   customer_telno as customerTelno
		  FROM customer
		 WHERE customer_email = #{customerEmail}
		   AND login_method = #{loginMethod}
		   AND status = 'Y'
    </select>
    <!-- 
    	기능: 내정보조회 
    	담당자: 윤상영
    -->
    <select id="selectMyInform" resultType="com.example.daitso.customer.model.CheckMyInform" parameterType="int">
    	SELECT customer_email as "customerEmail",
               customer_pw as "customerPW",
               customer_telno as "customerTelNo",
               customer_nm as "customerNm"
		  FROM customer
         WHERE customer_id =#{customerId}
    </select>
     <!-- 
    	기능: 내 아이디(이메일)조회
    	담당자: 윤상영
    -->
    <select id="selectMyEmail" resultType="String" parameterType="int">
    	SELECT customer_email as "customerEmail"
		  FROM customer
		 WHERE customer_id=#{customerId}
    </select>
     <!-- 
    	기능: 내 이름 조회
    	담당자: 윤상영
    -->
    <select id="selectMyName" resultType="String" parameterType="int">
    	SELECT customer_NM as "customerNM"
		  FROM customer
		WHERE customer_id=#{customerId}
    </select>
    <!-- 
    	기능: 내 전화번호 조회
    	담당자: 윤상영
    -->
    <select id="selectMyTelNo" resultType="String" parameterType="int">
    	SELECT customer_TelNO as "customerTelNo"
		  FROM customer
		 WHERE customer_id=#{customerId}
    </select>
     <!-- 
    	기능: 내 비밀번호 조회
    	담당자: 윤상영
    -->
    <select id="selectMyPassword" resultType="String" parameterType="int">
    	SELECT customer_PW as "customerPW"
		  FROM customer
		 WHERE customer_id=#{customerId}
    </select>
    <!-- 
    	기능: 내 이름변경
    	담당자: 윤상영
    -->
    <update id="updateMyName">
    	UPDATE customer
		   SET customer_nm = #{newName}
		 WHERE customer_id=#{customerId}
    </update>
    <!-- 
    	기능: 내 아이디(이메일)변경
    	담당자: 윤상영
    -->
    <update id="updateMyEmail">
    	UPDATE customer
		   SET customer_email=#{newEmail}
		 WHERE customer_id=#{customerId}
    </update>
     <!-- 
    	기능: 내 전화번호 변경하기
    	담당자: 윤상영
    -->
    <update id="updateMyTelNO">
    	UPDATE customer
		   SET customer_telno=#{newTelNO}
		 WHERE customer_id=#{customerId}
    </update>
    
    
</mapper>