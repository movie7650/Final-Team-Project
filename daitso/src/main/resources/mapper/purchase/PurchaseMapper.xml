<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daitso.purchase.repository.IPurchaseRepository">
	
	<select id="selectAllOrderProduct" parameterType="int" resultType="com.example.daitso.purchase.model.PurchaseCheck">
		SELECT purchase_count					AS	"purchaseCount",
			   REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(purchase_price)), '(\d{3})','\1,')), '^,','')					AS	"purchasePrice",
			   cc.common_code_nm				AS	"purchaseDv",
			   REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(purchase_price * purchase_count)), '(\d{3})','\1,')), '^,','')	AS "totalCost",
			   product_nm						AS 	"productNm",
			   purchase_num						AS	"purchaseNum",
			   pur.create_dt						AS	"createDt"
			   
	   	  FROM purchase pur, product p, common_code cc
	   	 WHERE customer_id=#{customerId} 
	   	   AND pur.product_id = p.product_id
	   	   AND pur.purchase_dv = cc.common_code_id
	  ORDER BY purchase_id DESC
	</select>
	
	<select id="selectShipping" parameterType="int" resultType="int">
		SELECT COUNT(pur.purchase_dv) as "shippingCount"
		  FROM purchase pur
		 WHERE pur.purchase_dv=402 
		   AND pur.customer_id=#{customerId}
	</select>
	
	<select id="selectShippingComplete" parameterType="int" resultType="int">
			SELECT COUNT(pur.purchase_dv) as "shippingCompleteCount"
		  FROM purchase pur
		 WHERE pur.purchase_dv=403 
		   AND pur.customer_id=#{customerId}
	</select>
	
	<select id="selectAllPurchaseList" resultType="com.example.daitso.purchase.model.PurchaseList">
	    SELECT p.purchase_id     AS  "purchaseId",
	           r.product_nm      AS  "productNm",
	           c.customer_nm     AS  "customerNm",
		       p.purchase_num	 AS  "purchaseNum",
		       p.create_dt       AS  "createDt",
	           d.common_code_id  AS  "commonCodeId",
	           d.common_code_nm  AS  "commonCodeNm"
	      FROM purchase p
		  JOIN customer c ON p.customer_id = c.customer_id 
	      JOIN common_code d ON p.purchase_dv = d.common_code_id
	      JOIN product r ON r.product_id = p.product_id
	  ORDER BY p.create_dt
	<!-- 	 WHERE purchase_dv = #{purchaseDv} -->
	</select>
	
	<update id="changePurchaseStatus" parameterType="com.example.daitso.purchase.model.PurchaseList">
	    UPDATE purchase
	       SET purchase_dv = #{commonCodeId}
	     WHERE purchase_id = #{purchaseId}
	</update>
	
	<!-- 
		 기능: 구매하기
		 담당자: 최준원 
	 -->
	 <insert id="insertPurchase" parameterType="com.example.daitso.purchase.model.PurchaseInsert">
	 	INSERT INTO purchase ( purchase_id, product_id, customer_id, shipping_id, purchase_num, purchase_count, purchase_price, total_cost, order_request, purchase_dv, creator )
     				  VALUES ( purchase_seq.nextval, (SELECT product_id FROM cart WHERE cart_id = #{cartId}), #{customerId}, #{shippingId}, #{purchaseNum}, (SELECT cart_count FROM cart WHERE cart_id = #{cartId}),
              					( SELECT ((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count) - ((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count * 
                       					 <choose>
                       					 	<when test="customerCouponId != 0">
                       					 		( SELECT c.coupon_dscnt_rate 
		                           					FROM customer_coupon cc, coupon c 
		                          				   WHERE cc.coupon_id = c.coupon_id 
		                            				 AND cc.customer_coupon_id = #{customerCouponId} ) * 0.01)
                       					 	</when>
                       					    <otherwise>
                       					    	0 )
                       					    </otherwise>
                       					 </choose>
                           				     FROM product p, cart c
                          					WHERE p.product_id = c.product_id
                            				  AND c.cart_id = #{cartId}), #{totalCost}, #{orderRequest}, 401, #{customerId})
	 </insert>

</mapper>