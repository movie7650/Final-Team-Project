<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daitso.purchase.repository.IPurchaseRepository">
<select id="selectAllOrderProduct" parameterType="int" resultType="com.example.daitso.purchase.model.PurchaseCheck">
	SELECT purchase_count					AS	"purchaseCount",
		   REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(purchase_price)), '(\d{3})','\1,')), '^,','')					AS	"purchasePrice",
		   cc.common_code_nm				AS	"purchaseDv",
		   REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(purchase_price * purchase_count)), '(\d{3})','\1,')), '^,','')	AS "totalCost",
		   product_nm						AS 	"productNm",
		   purchase_num						AS	"purchaseNum",
		   pur.create_dt						AS	"createDt"
		   
   	  FROM purchase pur, product p, common_code cc
   	 WHERE customer_id=#{customerId} 
   	   AND pur.product_id = p.product_id
   	   AND pur.purchase_dv = cc.common_code_id
  ORDER BY purchase_id DESC
</select>

<select id="selectShipping" parameterType="int" resultType="int">
	SELECT COUNT(pur.purchase_dv) as "shippingCount"
	  FROM purchase pur
	 WHERE pur.purchase_dv=402 
	   AND pur.customer_id=#{customerId}
</select>

<select id="selectShippingComplete" parameterType="int" resultType="int">
		SELECT COUNT(pur.purchase_dv) as "shippingCompleteCount"
	  FROM purchase pur
	 WHERE pur.purchase_dv=403 
	   AND pur.customer_id=#{customerId}
</select>




	<select id="selectPurchaseList" resultType="com.example.daitso.purchase.model.PurchaseList">
	    SELECT *
		  FROM( SELECT p.purchase_id                            AS  "purchaseId",
		               r.product_nm                             AS  "productNm",
		               c.customer_nm                            AS  "customerNm",
		               p.purchase_num	                        AS  "purchaseNum",
		               p.create_dt                              AS  "createDt",
		               d.common_code_id                         AS  "commonCodeId",
		               d.common_code_nm                         AS  "commonCodeNm",
		               ROW_NUMBER() OVER (ORDER BY p.create_dt desc) AS "rn"
		  FROM purchase p
		  JOIN customer c ON p.customer_id = c.customer_id 
		  JOIN common_code d ON p.purchase_dv = d.common_code_id
		  JOIN product r ON r.product_id = p.product_id
	  GROUP BY p.purchase_id, 
			   r.product_nm, 
			   c.customer_nm, 
			   p.purchase_num, 
			   p.create_dt,
	           d.common_code_id,
	           d.common_code_nm
	    HAVING 1=1 
		       <choose>
				<!-- 전체 조회 -->
					<when test="(commonCodeId == null or commonCodeId == 0)">	
						            
					</when>
				<!-- commonCodeId에 따라서 -->
					<otherwise>
					 AND d.common_code_id = #{commonCodeId}
					 </otherwise>
			  </choose>
			    )    WHERE "rn" BETWEEN #{offset} + 1 
	                     AND #{offset} + #{pageSize}
	</select>


	<select id="selectCountPurchaseList">
	    SELECT COUNT (cnt)
		  FROM(	SELECT COUNT(*) AS cnt 
				  FROM purchase p
		          JOIN customer c ON p.customer_id = c.customer_id 
				  JOIN common_code d ON p.purchase_dv = d.common_code_id
				  JOIN product r ON r.product_id = p.product_id
			  GROUP BY p.purchase_id, 
					   r.product_nm, 
					   c.customer_nm, 
					   p.purchase_num, 
					   p.create_dt,
			           d.common_code_id,
			           d.common_code_nm
				HAVING 1=1
					   <choose>
					       <!-- 전체 조회 -->
							<when test="(commonCodeId == null or commonCodeId == 0)">	
					       )
					       </when>
	
					       <!-- commonCodeId에 따라서 -->
							<otherwise>
							 AND d.common_code_id = #{commonCodeId}
					       )
					       </otherwise>
					   </choose>
	 </select>



<select id="searchPurchaseInfo" resultType="com.example.daitso.purchase.model.PurchaseList">
    SELECT p.purchase_id                            AS  "purchaseId",
		   r.product_nm                             AS  "productNm",
		   c.customer_nm                            AS  "customerNm",
		   p.purchase_num	                        AS  "purchaseNum",
		   p.create_dt                              AS  "createDt",
		   d.common_code_id                         AS  "commonCodeId",
		   d.common_code_nm                         AS  "commonCodeNm"
     FROM purchase p
	 JOIN customer c ON p.customer_id = c.customer_id 
	 JOIN common_code d ON p.purchase_dv = d.common_code_id
	 JOIN product r ON r.product_id = p.product_id
     WHERE 1=1 
	        <if test='option=="회원명"'>
			AND INSTR(c.customer_nm,#{searchText}) > 0
	        </if>
	        <if test='option=="주문번호"'>
	        AND INSTR(p.purchase_num,#{searchText}) > 0
	        </if>
</select>







<update id="changePurchaseStatus" parameterType="com.example.daitso.purchase.model.PurchaseList">
    UPDATE purchase
       SET purchase_dv = #{commonCodeId}
     WHERE purchase_id = #{purchaseId}
</update>

</mapper>