<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daitso.category.repository.ICategoryRepository">

	<!-- 
		기능 : 선택한 카테고리를 포함한 하위 경로 계층형으로 가져오기
		담당자 : 나현웅
	-->
    <select id="selectCategoryList" parameterType="int" resultType="com.example.daitso.category.model.Category">
		SELECT category_id AS categoryId, 
	 	    	category_pr_id AS categoryPrId,
			    category_nm AS categoryNm, 
			    level AS lv,
			    CONNECT_BY_ISLEAF AS isLeaf
		FROM category 
		WHERE status = 'Y'
		<if test="categoryId != -1">
			AND CONNECT_BY_ROOT category_nm = 
							      ( 
							   	  SELECT CONNECT_BY_ROOT category_nm as root
							      FROM category 
								  WHERE category_id = #{categoryId}
						          START WITH category_pr_id = 0
					    		  CONNECT BY PRIOR category_id = category_pr_id
			          			  ) 
		</if>
		START WITH category_pr_id = 0
		CONNECT BY PRIOR category_id = category_pr_id
		ORDER SIBLINGS BY category_nm
	</select>
	
	<!-- 
		기능 : 카테고리 경로 가져오기 ex) 식품->과자->초콜릿
		담당자 : 나현웅
	 -->
	<select id="selectCategoryPath" parameterType="int" resultType="String">
		SELECT sys_connect_by_path(category_nm, ' > ') as path
	    FROM category 
	    WHERE category_id = #{categoryId}
	    START WITH category_pr_id = 0
	    CONNECT BY PRIOR category_id = category_pr_id	
	    ORDER SIBLINGS BY category_nm
	</select>
	
	<!-- 
		기능: 상위 카테고리(식품,도서,...) 고유번호와 이름 갖고오기 
		담당자: 최준원
	-->
	<select id="getAllFirstCategoryIdAndName" resultType="com.example.daitso.category.model.Category">
		SELECT category_id AS "categoryId", 
			   category_nm AS "categoryNm"
		  FROM category 
		 WHERE category_pr_id = 0
		   AND status = 'Y'
	  ORDER BY category_id
    </select>
    
    <!-- 
    	기능: 상위 카테고리(식품,도서,...) 고유번호로 부터 하위 카테고리 고유번호와 이름 갖고오기
    	담당자: 최준원
     -->
	<select id="getSecondCategoryIdAndNameByFirstCategoryId" parameterType="int" resultType="com.example.daitso.category.model.Category">
		SELECT category_id AS "categoryId", 
			   category_nm AS "categoryNm"
		  FROM category 
		 WHERE category_pr_id = #{categoryId}
		   AND status = 'Y'
	  ORDER BY category_id
    </select>
    
    <!-- 
    	기능: 전체 카테고리 계층형으로 가져오기
    	담당자: 나현웅
     -->
    <select id="selectAllCategory" resultType="com.example.daitso.category.model.Category">
    	SELECT category_id AS categoryId, 
    		   category_pr_id AS categoryPrId,
    		   category_nm AS categoryNm,
    		   level - 1 AS lv
		FROM category
		WHERE category_id != 0
		START WITH category_id = 0
		CONNECT BY PRIOR category_id=category_pr_id
		ORDER SIBLINGS BY category_nm
    </select>
    
    <!-- 
    	기능: drag&drop을 사용해 카테고리 수정 시 부모 카테고리 컬럼 수정
    	담당자: 나현웅
     -->
    <update id="updateCategory">
    	UPDATE category SET category_pr_id = #{parentCategoryId} where category_id = #{categoryId}
    </update>
    
    <!-- 
    	기능: 전체 카테고리중 무작위로 8개의 카테고리만 갖고오기(dmbs_radom 패키지 사용)
    	담당자: 나현웅
     -->
    <select id="selectMainCategory" resultType="com.example.daitso.category.model.Category">
    <![CDATA[
    	SELECT category_id AS categoryId, 
    			category_nm AS categoryNm, 
    			category_content AS categoryContent,
    			category_image AS categoryImage
   		FROM  (
    			SELECT category_id, category_nm, category_content, category_image
    			FROM category
    			WHERE category_id != 0
				ORDER BY dbms_random.value
			  )
		WHERE rownum <= 6
	]]>
    </select>
    
   
    <!-- 
    	기능: 전체 카테고리 조회하기
    	담당자: 이세인
     -->
	<select id="selectAllCategories" resultType="com.example.daitso.category.model.CategoryCheck">
	    SELECT *
		  FROM( SELECT category_id as "categoryId",
		               category_nm as "categoryNm",
		               sys_connect_by_path(category_nm, ' > ') as path,
		               ROW_NUMBER() OVER (ORDER BY category_id) AS "rn",
			    CONNECT_BY_ROOT category_id AS root_id,
			     LEVEL AS depth
			      FROM category
			     START WITH category_pr_id = 0
			     CONNECT BY PRIOR category_id = category_pr_id  AND status = 'Y'
		      )
		  WHERE "rn" BETWEEN #{offset} + 1 AND #{offset} + #{pageSize}
	</select>
	    
	    
	 <!-- 
    	기능: 카테고리 개수 조회하기
    	담당자: 이세인
     -->  
	<select id="selectCountCategories">
	    SELECT COUNT(*)
			    FROM ( SELECT category_id as "categoryId",
					          category_nm as "categoryNm",
					          sys_connect_by_path(category_nm, ' > ') as path,
						      CONNECT_BY_ROOT category_id AS root_id,
							  LEVEL AS depth
					     FROM category
					START WITH category_pr_id = 0
					CONNECT BY PRIOR category_id = category_pr_id AND status = 'Y'
					)
	</select>
	
	
	<!-- 
    	기능: 카테고리 삭제하기
    	담당자: 이세인
     --> 
	<delete id="deleteCategory" parameterType="int">
	    UPDATE category
	       SET status    = 'N',
	       	   modifier  = 'admin',
               modify_dt = systimestamp
	     WHERE category_id = #{categoryId}
	</delete>
	
	
	<!-- 
		기능: 카테고리ID로 카테고리 정보 조회하기
    	담당자: 이세인
     -->
	<select id="selectCategoryByCategoryId">
	 	SELECT category_id			  AS "categoryId",
	           category_nm            AS "categoryNm",
	           category_content		  AS "categoryContent",
	           category_image		  AS "categoryImage"
		  FROM category
	     WHERE category_id = #{categoryId}
	</select>
	
	
	<!-- 
		기능: 카테고리 정보 수정하기
    	담당자: 이세인
     -->
	<update id="updateCategoryInfo" parameterType="com.example.daitso.category.model.CategoryCheck">
	    UPDATE category
		   SET category_nm      = #{categoryNm},
		   	   category_content = #{categoryContent},
		   	   modifier         = 'admin',
               modify_dt        = systimestamp
		 WHERE category_id = #{categoryId}
	</update>
	
	
	<!-- 
		기능: 카테고리 등록하기
    	담당자: 이세인
     -->
	<insert id="registerCategories" parameterType="com.example.daitso.category.model.CategoryCheck">
		INSERT INTO category ( category_id,
		                       category_nm,
		                       category_content,
		                       category_pr_id,
		                       category_image) 
	         VALUES ( category_seq.NEXTVAL,
		             #{categoryNm},
		             #{categoryContent},
		             #{categoryId},
		             #{categoryImage} ) 
		           
		<!-- INSERT INTO category ( category_id,
                           category_nm,
                           category_content,
                           category_pr_id) 
		    VALUES ( category_seq.NEXTVAL,
		             #{categoryNm},
		             #{categoryContent},
		             <choose>
		                 <when test="categoryId == null">
		                 0
		                 </when>
		                 <otherwise>#{categoryId}</otherwise>
		             </choose> ) -->
    </insert>
	

</mapper>