<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daitso.cart.repository.ICartRepository">

	<!-- 
		기능: 장바구니에 담겨있지 않은 상품 담기
		담당자: 나현웅
	 -->
	<insert id="insertCart">
		INSERT INTO cart (cart_id, product_id, customer_id, cart_count, create_dt, creator)
		VALUES(cart_seq.nextval, #{productId}, #{customerId}, #{productCnt}, sysdate, #{customerId})
	</insert>

	<!-- 
		기능: 사용자 고유번호로부터 사용자 장바구니 조회
		담당자: 최준원
	-->
	<select id="getCartByCustomerId" resultType="com.example.daitso.cart.model.CartCheck" parameterType="int">
		SELECT c.cart_id AS "cartId",
			   c.product_id AS "productId",
			   p.product_group_id AS "productGroupId",
			   c.cart_count AS "cartCount",
			   c.checked AS "checked",
			   p.product_nm AS "productNm",
			   TO_CHAR(p.product_price, 'FM999,999,999') AS "productRealPrice",
		       TO_CHAR(p.product_price - (p.product_price * p.discount_rate * 0.01), 'FM999,999,999') AS "productPrice",
		       TO_CHAR((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count, 'FM999,999,999') AS "productTotalPrice",
			   p.product_stock AS "productStock",
			   p.product_option_first AS "productOptionFirst",
			   p.product_option_second AS "productOptionSecond",
			   p.product_option_third AS "productOptionThird",
			   p.product_image_first AS "productImageFirst",
			   p.category_id AS "categoryId",
			   a.category_pr_id AS "categoryPrId",
			   p.status AS "productStatus",
			   p.discount_rate AS "discountRate"       
		  FROM cart c,
		  	   product p,
               category a
		 WHERE c.customer_id = #{customerId}
           AND c.product_id = p.product_id
           AND a.category_id = p.category_id
		   AND c.status = 'Y'
	  ORDER BY c.cart_id
    </select>
   
    <!-- 
		기능: 사용자 고유번호로부터 사용자 장바구니에 담긴 물건 개수 조회
		담당자: 최준원
	-->
	<select id="getCartCountByCustomerId" resultType="int" parameterType="int">
		SELECT count(*)
		  FROM cart
		 WHERE customer_id = #{customerId}
		   AND status = 'Y'
    </select>
    
    <!-- 
		기능: 장바구니 개수 수정
		담당자: 최준원
	-->
    <update id="updateCartCountByCartId" parameterType="com.example.daitso.cart.model.CartUpdate">
    	UPDATE cart
		   SET cart_count = #{cartCount},
			   modify_dt = SYSDATE,
			   modifier = #{customerId}
		 WHERE cart_id = #{cartId}
    </update>
    
     <!-- 
		기능: 장바구니 삭제
		담당자: 최준원
	-->
    <update id="deleteCartByCartId" parameterType="Map">
    	UPDATE cart
		   SET status = 'N',
		   	   checked = 'true',
		       modify_dt = SYSDATE,
		       modifier = #{customerId}
		 WHERE cart_id IN
		 	   <foreach collection="cartIdList" item="cartId" open="(" close=")" separator=",">
				 	#{cartId}
		       </foreach>
    </update>
    
    <!-- 
		기능: 장바구니 체크박스 상태 변경
		담당자: 최준원
	-->
    <update id="updateCheckedByCartId" parameterType="Map">
    	UPDATE cart
		   SET checked = #{checked},
		       modify_dt = SYSDATE,
		       modifier = #{customerId}
		 WHERE cart_id IN 
		 		<foreach collection="cartIdList" item="cartId" open="(" close=")" separator=",">
				 	#{cartId}
				</foreach>
    </update>
    
    <!-- 
		기능: 쿠폰 적용 대상 상품들 조회
		담당자: 최준원
	-->
	<select id="getCouponProductByCustomerId" parameterType="int" resultType="com.example.daitso.cart.model.CartCoupon">
		SELECT p.product_id AS "productId",
       		   p.product_image_first AS "productImageFirst",
       		   p.product_nm AS "productNm",
               TO_CHAR(p.product_price - (p.product_price * p.discount_rate * 0.01), 'FM999,999,999') AS "productPrice",
               c.cart_id AS "cartId",
               c.cart_count AS "cartCount",
			   TO_CHAR((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count, 'FM999,999,999') AS "cartPrice",
			   p.category_id AS "categoryId",
       		   p.product_option_first AS "productOptionFirst",
       		   p.product_option_second AS "productOptionSecond",
               p.product_option_third AS "productOptionThird",
               (SELECT COUNT(*) 
                  FROM coupon c, customer_coupon cc 
                 WHERE c.coupon_id = cc.coupon_id
                   AND cc.customer_id = #{customerId}
                   AND cc.coupon_use_dv = 203
                   AND c.category_id IN (
														SELECT category_id 
									  					  FROM category 
						        					START WITH category_id = p.category_id 
				          					  CONNECT BY PRIOR category_pr_id = category_id 
										)) AS "couponUseCount"
		 FROM  cart c,
     		   product p,
     		   category cg
		WHERE  c.product_id = p.product_id
		  AND  cg.category_id = p.category_id
		  AND  c.customer_id = #{customerId}
		  AND  c.checked = 'true'
		  AND  c.status = 'Y'
     ORDER BY c.cart_id
	</select>
	
	 <!-- 
		기능: 쿠폰 적용 대상 상품들 조회(바로구매)
		담당자: 최준원
	-->
	<select id="getCouponProductByCustomerIdAndCartId" resultType="com.example.daitso.cart.model.CartCoupon">
		SELECT p.product_id AS "productId",
       		   p.product_image_first AS "productImageFirst",
       		   p.product_nm AS "productNm",
               TO_CHAR(p.product_price - (p.product_price * p.discount_rate * 0.01), 'FM999,999,999') AS "productPrice",
               c.cart_id AS "cartId",
               c.cart_count AS "cartCount",
			   TO_CHAR((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count, 'FM999,999,999') AS "cartPrice",
			   p.category_id AS "categoryId",
       		   p.product_option_first AS "productOptionFirst",
       		   p.product_option_second AS "productOptionSecond",
               p.product_option_third AS "productOptionThird",
               (SELECT COUNT(*) 
                  FROM coupon c, customer_coupon cc 
                 WHERE c.coupon_id = cc.coupon_id
                   AND cc.customer_id = #{customerId}
                   AND cc.coupon_use_dv = 203
                   AND c.category_id IN (
														SELECT category_id 
									  					  FROM category 
						        					START WITH category_id = p.category_id 
				          					  CONNECT BY PRIOR category_pr_id = category_id 
										)) AS "couponUseCount"
		 FROM  cart c,
     		   product p,
     		   category cg
		WHERE  c.product_id = p.product_id
		  AND  cg.category_id = p.category_id
		  AND  c.customer_id = #{customerId}
		  AND  c.checked = 'true'
		  AND  c.cart_id = #{cartId}
	</select>
	
	 <!--
		기능: 구매하기 전 장바구니에 담긴 물건들 조회 
		담당자: 최준원
	-->
	<select id="getCartProductBeforePurchaseByCustomerId" parameterType="int" resultType="com.example.daitso.cart.model.CartPurchase">
		SELECT p.product_id AS "productId",
			   p.product_nm AS "productNm",
			   p.product_option_first AS "productOptionFirst",
			   p.product_option_second AS "productOptionSecond",
			   p.product_option_third AS "productOptionThird",
			   c.cart_id AS "cartId",
			   c.cart_count AS "cartCount",
			   (p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count AS "cartPrice"
		  FROM cart c,
			   product p
		 WHERE c.product_id = p.product_id
		   AND c.customer_id = #{customerId}
		   AND c.checked = 'true'
		   AND c.status = 'Y'
	</select>
	
	<!--
		기능: 구매하기 전 장바구니에 담긴 물건들 조회(바로구매)
		담당자: 최준원
	-->
	<select id="getCartProductBeforePurchaseByCustomerIdAndCartId" resultType="com.example.daitso.cart.model.CartPurchase">
		SELECT p.product_id AS "productId",
			   p.product_nm AS "productNm",
			   p.product_option_first AS "productOptionFirst",
			   p.product_option_second AS "productOptionSecond",
			   p.product_option_third AS "productOptionThird",
			   c.cart_id AS "cartId",
			   c.cart_count AS "cartCount",
			   (p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count AS "cartPrice"
		  FROM cart c,
			   product p
		 WHERE c.product_id = p.product_id
		   AND c.customer_id = #{customerId}
		   AND c.cart_id = #{cartId}
	</select>      
	
	<!-- 
		기능: 장바구니 추가하기 전 기존에 추가된 상품 있는지 조회
		담당자: 나현웅
	 -->
	 <select id="selectCustomerCartProduct" resultType="Map">
	 	SELECT cart_id AS cartId, 
	 			cart_count AS cartCount,
	 			product_max_get AS productMaxGet
	 	FROM cart c
	 	LEFT JOIN product p ON c.product_id = p.product_id
	 	WHERE customer_id = #{customerId} and c.product_id = #{productId} and c.status = 'Y'
	 </select>

	 <!-- 
		기능1: 장바구니에 담겨있는 상품 담기(개수만 추가)
		기능2: 바로 구매하기 전 장바구니 업데이트
		담당자: 나현웅
	 -->
	<update id="updateCartCnt">
		UPDATE cart 
		   SET cart_count = #{productCnt},
		   	   modifier = #{customerId},
       		   modify_dt = SYSTIMESTAMP 
		 WHERE customer_id = #{customerId} 
		   AND product_id = #{productId}
	</update>
	
	<!-- 
		기능:  구매 성공시 장바구니 상태 'N' 변경
		담당자: 최준원
	 -->
	<update id="updateCartStatusPurchaseSuccess">
		UPDATE cart 
   		   SET status = 'N',
      		   modifier = #{customerId},
       		   modify_dt = SYSTIMESTAMP
 		 WHERE cart_id = #{cartId}
	</update>

	<!-- 
		기능:  바로 구매하기
		담당자: 최준원
	 -->
	<insert id="directPurchase">
		DECLARE
  			cart_cnt NUMBER;
		BEGIN
			SELECT count(*) 
			  INTO cart_cnt 
			  FROM cart
			 WHERE customer_id = #{customerId}
               AND product_id = #{productId}
               AND status = 'Y';
		IF 
			cart_cnt = 1
		THEN
	    	UPDATE cart 
               SET cart_count = #{productCnt},
		   	       modifier = #{customerId},
       		       modify_dt = SYSTIMESTAMP 
		     WHERE customer_id = #{customerId} 
		       AND product_id = #{productId};
        ELSE
            INSERT INTO cart (cart_id, product_id, customer_id, cart_count, create_dt, creator)
                 VALUES (cart_seq.nextval, #{productId}, #{customerId}, #{productCnt}, SYSDATE, #{customerId});
		END IF;
		END;
	</insert>
	
	<!-- 
		기능: 바로 구매시 해당 상품 정보들 장바구니 화면에 띄우기
		담당자: 최준원
	-->
	<select id="getCartByCartIdDirectPurchase" resultType="com.example.daitso.cart.model.CartCheck" parameterType="int">
		SELECT c.cart_id AS "cartId",
		       c.product_id AS "productId",
		       p.product_group_id AS "productGroupId",
		       c.cart_count AS "cartCount",
		       c.checked AS "checked",
		       p.product_nm AS "productNm",
		       TO_CHAR(p.product_price, 'FM999,999,999') AS "productRealPrice",
		       TO_CHAR(p.product_price - (p.product_price * p.discount_rate * 0.01), 'FM999,999,999') AS "productPrice",
		       TO_CHAR((p.product_price - (p.product_price * p.discount_rate * 0.01)) * c.cart_count, 'FM999,999,999') AS "productTotalPrice",
		       p.product_stock AS "productStock",
		       p.product_option_first AS "productOptionFirst",
		       p.product_option_second AS "productOptionSecond",
		       p.product_option_third AS "productOptionThird",
		       p.product_image_first AS "productImageFirst",
		       p.category_id AS "categoryId",
		       a.category_pr_id AS "categoryPrId",
		       p.status AS "productStatus",
		       p.discount_rate AS "discountRate"
		  FROM cart c, 
		       product p,
		       category a
		 WHERE c.product_id = p.product_id
		   AND a.category_id = p.category_id
		   AND cart_id = ( SELECT cart_id 
		                     FROM cart
		                     WHERE create_dt = ( SELECT MAX( CASE WHEN modify_dt IS NULL 
		                                                          THEN create_dt
		                                                          ELSE GREATEST(create_dt, modify_dt) 
		                                                          END )
		                                           FROM cart
		                                          WHERE status = 'Y'
		                                            AND customer_id = #{customerId} ) 
		                        OR modify_dt = ( SELECT MAX( CASE WHEN modify_dt IS NULL 
		                                                         THEN create_dt
		                                                         ELSE GREATEST(create_dt, modify_dt) 
		                                                         END )
		                                          FROM cart
		                                         WHERE status = 'Y'
		                                           AND customer_id = #{customerId} )
		                       AND status = 'Y' 
		                       AND customer_id = #{customerId} )
    </select>
</mapper>